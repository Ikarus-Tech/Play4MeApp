{"ast":null,"code":"var _jsxFileName = \"D:\\\\Felizardo\\\\Ikarus\\\\Projectos\\\\Play4Me\\\\App\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { io } from \"socket.io-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SearchBar from \"./SearchBar.jsx\";\nimport RequestList from \"./RequestList.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport \"../../styles/RequestManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || \"http://localhost:8081\";\nfunction RequestManager() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const requestListRef = useRef(null); // Ref para o componente RequestList\n  const socketRef = useRef(null); // Ref para manter a instância do socket\n\n  useEffect(() => {\n    const checkToken = () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const decodedToken = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          if (decodedToken.exp < currentTime) {\n            localStorage.removeItem(\"token\");\n            navigate(\"/login-venue\");\n            toast.error(\"Sessão expirada. Faça login novamente.\");\n          } else {\n            setUserId(decodedToken.id);\n          }\n        } catch (error) {\n          console.error(\"Erro ao decodificar o token:\", error);\n          localStorage.removeItem(\"token\");\n          navigate(\"/login-venue\");\n        }\n      } else {\n        navigate(\"/login-venue\");\n      }\n    };\n    checkToken();\n  }, [navigate]);\n  useEffect(() => {\n    if (userId) {\n      const socket = io(SOCKET_URL);\n      socketRef.current = socket; // Salvar a instância do socket\n\n      socket.on(\"connect\", () => {\n        console.log(\"Conectado ao servidor:\", socket.id);\n        const roomId = `venue-${userId}`;\n        socket.emit(\"join-room\", roomId); // Entrar na sala\n        console.log(`Solicitação para entrar na sala: ${roomId}`);\n      });\n      socket.on(\"new-request\", newRequest => {\n        var _requestListRef$curre;\n        console.log(\"Nova requisição recebida no frontend:\", newRequest);\n\n        // Atualizar lista de solicitações\n        if ((_requestListRef$curre = requestListRef.current) !== null && _requestListRef$curre !== void 0 && _requestListRef$curre.handleUpdateRequest) {\n          requestListRef.current.handleUpdateRequest(newRequest);\n        }\n\n        // Gerar uma chave única com base no ID da requisição\n        const toastKey = `request-toast-${newRequest.requisicaoId}`;\n\n        // Evitar duplicidade de Toasts\n        if (!toast.isActive(toastKey)) {\n          toast.info(`Nova solicitação: ${newRequest.clienteNome}`, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            toastId: toastKey\n          });\n        }\n      });\n      socket.on(\"disconnect\", () => {\n        console.log(\"Desconectado do servidor:\");\n      });\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n          console.log(\"Socket desconectado ao desmontar componente.\");\n          console.log(userId);\n        }\n      };\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Requests\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playlist-icon\",\n        onClick: () => navigate(\"/playlist\"),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../../assets/playlist.png\"),\n          alt: \"Playlist Icon\",\n          style: {\n            width: \"24px\",\n            height: \"24px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RequestList, {\n      ref: requestListRef,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(RequestManager, \"lYRnHVe2MUC7/gm9QezxeZiy7t8=\", false, function () {\n  return [useNavigate];\n});\n_c = RequestManager;\nexport default RequestManager;\nvar _c;\n$RefreshReg$(_c, \"RequestManager\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jwtDecode","io","ToastContainer","toast","SearchBar","RequestList","Footer","jsxDEV","_jsxDEV","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","RequestManager","_s","userId","setUserId","navigate","requestListRef","socketRef","checkToken","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","removeItem","error","id","console","socket","current","on","log","roomId","emit","newRequest","_requestListRef$curre","handleUpdateRequest","toastKey","requisicaoId","isActive","info","clienteNome","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastId","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","require","alt","style","width","height","ref","_c","$RefreshReg$"],"sources":["D:/Felizardo/Ikarus/Projectos/Play4Me/App/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { io } from \"socket.io-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SearchBar from \"./SearchBar.jsx\";\nimport RequestList from \"./RequestList.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport \"../../styles/RequestManager.css\";\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || \"http://localhost:8081\";\n\nfunction RequestManager() {\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const requestListRef = useRef(null); // Ref para o componente RequestList\n  const socketRef = useRef(null); // Ref para manter a instância do socket\n\n  useEffect(() => {\n    const checkToken = () => {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        try {\n          const decodedToken = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n\n          if (decodedToken.exp < currentTime) {\n            localStorage.removeItem(\"token\");\n            navigate(\"/login-venue\");\n            toast.error(\"Sessão expirada. Faça login novamente.\");\n          } else {\n            setUserId(decodedToken.id);\n          }\n        } catch (error) {\n          console.error(\"Erro ao decodificar o token:\", error);\n          localStorage.removeItem(\"token\");\n          navigate(\"/login-venue\");\n        }\n      } else {\n        navigate(\"/login-venue\");\n      }\n    };\n\n    checkToken();\n  }, [navigate]);\n\n  useEffect(() => {\n    if (userId) {\n      const socket = io(SOCKET_URL);\n\n      socketRef.current = socket; // Salvar a instância do socket\n\n      socket.on(\"connect\", () => {\n        console.log(\"Conectado ao servidor:\", socket.id);\n\n        const roomId = `venue-${userId}`;\n        socket.emit(\"join-room\", roomId); // Entrar na sala\n        console.log(`Solicitação para entrar na sala: ${roomId}`);\n      });\n\n      socket.on(\"new-request\", (newRequest) => {\n        console.log(\"Nova requisição recebida no frontend:\", newRequest);\n      \n        // Atualizar lista de solicitações\n        if (requestListRef.current?.handleUpdateRequest) {\n          requestListRef.current.handleUpdateRequest(newRequest);\n        }\n      \n        // Gerar uma chave única com base no ID da requisição\n        const toastKey = `request-toast-${newRequest.requisicaoId}`;\n      \n        // Evitar duplicidade de Toasts\n        if (!toast.isActive(toastKey)) {\n          toast.info(`Nova solicitação: ${newRequest.clienteNome}`, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            toastId: toastKey,\n          });\n        }\n      });\n      \n      socket.on(\"disconnect\", () => {\n        console.log(\"Desconectado do servidor:\");\n      });\n\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n          console.log(\"Socket desconectado ao desmontar componente.\");\n          console.log(userId)\n        }\n      };\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"Requests\">\n      <div className=\"search-bar-container\">\n        <SearchBar userId={userId} />\n        <button\n          className=\"playlist-icon\"\n          onClick={() => navigate(\"/playlist\")}\n        >\n          <img\n            src={require(\"../../assets/playlist.png\")}\n            alt=\"Playlist Icon\"\n            style={{ width: \"24px\", height: \"24px\" }}\n          />\n        </button>\n      </div>\n      <RequestList ref={requestListRef} userId={userId} />\n      <Footer />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default RequestManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}